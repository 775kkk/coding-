# по сути ячейки но ячеек всего одна

# 128) (ЕГЭ-2023) Входной файл содержит сведения о заявках на проведение занятий в конференц-зале. В каждой заявке указаны время начала и время окончания мероприятия (в минутах от начала суток). Если время начала одного мероприятия меньше времени окончания другого, то провести можно только одно из них. Если время окончания одного мероприятия совпадает с временем начала другого, то провести можно оба. Определите максимальное количество мероприятий, которое можно провести в конференц-зале и самое позднее время окончания последнего
# мероприятия.
# Входные данные представлены в файле 26-128.txt следующим образом. 
# Первая строка входного файла содержит натуральное число N (1 N $ 1000) - 
# количество заявок на проведение мероприятий. 
# Следующие N строк содержат пары чисел, обозначающих время начала и 
# время окончания мероприятий. Каждое из чисел натуральное, не превосходящее 1440. 
# Запишите в ответе два числа: максимальное количество мероприятий, 
# которое можно провести в 
# конференц-зале и самое позднее время окончания последнего мероприятия 
# (в минутах от начала суток).
# Пример входного файла:
# 5
# 10 150
# 100 110
# 131 170
# 131 180
# 120 130
# При таких исходных данных можно провести максимум три мероприятия, например, по заявкам 2, 3 и 5. Конференц-зал освободится самое позднее на 180-й минуте, если состоятся мероприятия по заявкам 2, 4, 5. Ответ: 3 180.

# кароче тут типа по логике нам надо уместить в одину работу зала максимальное число мероприятий
# но запросов как обычно тонна разных
# мы че мы люди простые нам пох и мы хотим впихнуть как можно больше мероприятий
# соответственно чем они кароче будут тем пизже
# тоесть чем их время окончания раньше тем лучше

# в исходном файле куча запрсов вразноброд, те они типа не отсортированы
# соотв мы можем по идее дефолтно запихнуть все в двумерный список и из него уже каждое время окончания в отдельный список который просто сортеднем
# но в таком случае у нас потеряется время начала мероприятия, да можно поискать просто эквиваленты и вставить их но это может быть и коряво и долго и ненадежно
# а сортировка по второму значению двумер массива нам нужна чтобы удобно перебирать реквесты(запросы) просто ренжом а не рендом искать каждый подходящий

# если у нас на входных данных будет 
# [[10 600] [42 602] [500 603] [33 604] [55 604]...]
# то мы удобно будем знать что некст элемент точно больше вторым значением и он нам типо подходит и он типа минимальный шариш
# чем в данных типа
#   [[99 1020] [987 1001] [88 900] [700 873] [10 796]]
# сначала найти минимальный второй аргумент потом постоянно искать минимальный последующий и сравнивать его первый арг в двумерном неотсортированном массиве

# да я понимаю что и без сортировки реализуемо но мне вот прдедложили скопировать исходный файл потом открыть его через ексел
# и там уже отсортировать потом скопиваровать пихнуть в тхт и там табы заменить на пробелы чепез замена поиск с копированием символов
# и вот после того как мы это сделали (хотя я не уверен что при большом количестве запросов все будет четко...)
# мы уже открываем файл
f=open("")
n=f.readline()# там первая строка еще есть в эселе ее можно запомнить и удалить наху но для целостности эту строку я написшу
a=[list(map(int, i.split())) for i in f]
hall=[a[0][1]]
for i in range(1,n):# 0 в хале
    if a[i][0]>=hall[-1]:
        hall.append(a[i][1])
print(len(hall)) #26-128 еге2023
#ответ 16 хз к какому пункту)))))))))))))))))

# оч интересно как по нормальному в реальных задачах настоящие прогеры фиксят такие приколы и форматируют исходные данные... вцелом данные

