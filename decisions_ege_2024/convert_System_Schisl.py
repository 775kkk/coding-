def f(x,y):
    c = 0
    power = 0
    while x > 0:
        c += (x % 10) * (y ** power)
        x //= 10
        power += 1
    return c
print(f(99242114,125))
# это из числа x в системе счисл y в число c в системе 10
# y это основание числа, его система счисл
# x это само число

# однако есле там букавы ебаные :
# 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.
# 0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15
#      9 8 7 6 5 4 3 2 1 0
digit="D 4 6 A F 4 9 0 1 C "# основание 16
norm_digit = (13*16**9)+(4*16**8)+(6*16**7)+(10*16**6)+(15*16**5)+(4*16**4)+(9*16**3)+0+(1*16*1)+(12*16**0)
# по факту функция выше это вот то что в норм дигит
print(norm_digit)
digit="D46AF4901C"
print(int(digit,16))# вот эта уевина сработает всегда да при 11 ричной, ток следи чтоб там B+ не было
# всегда а именно : int() base must be >= 2 and <= 36, or 0

# более простая конструкция из 10 системы в y систему:
def fy(x,y):
    s=""
    while x>0:
        s+=str(x%y)
        x//=y
    return s[::-1]
def f4(x):
    s=""
    while x>0:
        s+=str(x%4)
        x//=4
    return s[::-1]
